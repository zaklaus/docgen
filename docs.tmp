0 vec2#1 2-sized vector. Alias: v2#3 Math [Unfinished]#4 union vec2
{
    struct
    {
        real32 X, Y;
    };

    struct
    {
        real32 U, V;
    };

    struct
    {
        real32 Left, Right;
    };

    real32 Elements[2];
} vec2#0 vec3#1 3-sized vector. Alias: v3#4 union vec3
{
    struct
    {
        real32 X, Y, Z;
    };

    struct
    {
        real32 U, V, W;
    };

    struct
    {
        real32 R, G, B;
    };

    struct
    {
        vec2 XY;
        real32 Ignored0_;
    };

    struct
    {
        real32 Ignored1_;
        vec2 YZ;
    };

    struct
    {
        vec2 UV;
        real32 Ignored2_;
    };

    struct
    {
        real32 Ignored3_;
        vec2 VW;
    };

    real32 Elements[3];
} vec3#0 vec4#1 4-sized vector. Alias: v4#4 union vec4
{
    struct
    {
        union
        {
            vec3 XYZ;
            struct
            {
                real32 X, Y, Z;
            };
        };

        real32 W;
    };
    struct
    {
        union
        {
            vec3 RGB;
            struct
            {
                real32 R, G, B;
            };
        };

        real32 A;
    };

    struct
    {
        vec2 XY;
        real32 Ignored0_;
        real32 Ignored1_;
    };

    struct
    {
        real32 Ignored2_;
        vec2 YZ;
        real32 Ignored3_;
    };

    struct
    {
        real32 Ignored4_;
        real32 Ignored5_;
        vec2 ZW;
    };

    real32 Elements[4];
} vec4#0 mat4#1 4x4 Matrix. Alias: m4#4 union mat4
{
    real32 Elements[4][4];
} mat4#4 vec2 v2#4 vec3 v3#4 vec4 v4#4 mat4 m4#0 MathToRadians#1 Convert Degree value to Radians.#4 real32
MathToRadians(real32 Degrees)
#0 MathInner#1 Calculates scalar value from 2 vectors.#4 real32
MathInner(vec3 A, vec3 B)
#0 MathSquareRoot#1 Calculates the 2th square root of value.#4 real32
MathSquareRoot(real32 Float)
#0 MathLengthSquareRoot#1 Calculates the length of a square root.#4 real32
MathLengthSquareRoot(vec3 A)
#0 MathFastInverseSquareRoot#1 Calculates inverse square root of value.#4 real32
MathFastInverseSquareRoot(real32 Number)
#0 MathLength#1 Calculates the length of vector.#4 real32
MathLength(vec3 A)
#0 MathPower#1 Calculates the power of E for value.#4 real32
MathPower(real32 Base, int Exponent)
#0 MathLerp#1 Calculates linear interpolation between 2 values by given time.#4 real32
MathLerp(real32 A, real32 Time, real32 B)
#0 MathClamp#1 Clamps the value between Minima/Maxima.#4 real32
MathClamp(real32 Min, real32 Value, real32 Max)
#0 MathNormalize#1 Returns normalized vector.#4 vec3
MathNormalize(vec3 A)
#0 MathCross#1 Calculates the cross product of 2 vectors.#4 vec3
MathCross(vec3 VecOne, vec3 VecTwo)
#0 MathDot#1 Calculates the dot product of 2 vectors.#4 real32
MathDot(vec3 VecOne, vec3 VecTwo)
#4 vec2
MathVec2(real32 X, real32 Y)
#4 vec2
MathVec2i(int X, int Y)
#4 vec3
MathVec3(real32 X, real32 Y, real32 Z)
#4 vec3
MathVec3i(int X, int Y, int Z)
#4 vec4
MathVec4(real32 X, real32 Y, real32 Z, real32 W)
#4 vec4
MathVec4i(int X, int Y, int Z, int W)
#4 vec2
MathAddVec2(vec2 Left, vec2 Right)
#4 vec3
MathAddVec3(vec3 Left, vec3 Right)
#4 vec4
MathAddVec4(vec4 Left, vec4 Right)
#4 vec2
MathSubtractVec2(vec2 Left, vec2 Right)
#4 vec3
MathSubtractVec3(vec3 Left, vec3 Right)
#4 vec4
MathSubtractVec4(vec4 Left, vec4 Right)
#4 vec2
MathMultiplyVec2(vec2 Left, vec2 Right)
#4 vec3
MathMultiplyVec3(vec3 Left, vec3 Right)
#4 vec4
MathMultiplyVec4(vec4 Left, vec4 Right)
#4 vec2
MathDivideVec2(vec2 Left, vec2 Right)
#4 vec3
MathDivideVec3(vec3 Left, vec3 Right)
#4 vec4
MathDivideVec4(vec4 Left, vec4 Right)
#4 mat4
MathMat4()
#4 mat4
MathMat4d(real32 Diagonal)
#4 mat4
MathMultiplyMat4(mat4 Left, mat4 Right)
#4 vec4
MathMultiplyMat4ByVec4(mat4 Matrix, vec4 Vector)
#4 mat4
MathOrthographic(real32 Left, real32 Right, real32 Bottom, real32 Top, real32 Near, real32 Far)
#4 mat4
MathPerspective(real32 FOV, real32 AspectRatio, real32 Near, real32 Far)
#4 mat4
MathTranslate(vec3 Translation)
#4 mat4
MathRotate(real32 Angle, vec3 Axis)
#4 mat4
MathLookAt(vec3 Eye, vec3 Center, vec3 Up)
#4 mat4
MathScale(vec3 Scale)
#